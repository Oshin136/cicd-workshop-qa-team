name: Frontend Deployment
on:
  push:
    branches:
        - team3-oshin


jobs:
  deploy:
    runs-on: ubuntu-latest


    steps:

    - name: Checkout Code
      uses: actions/checkout@v4


    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Install Frontend dependencies
      run: |
        cd frontend
        npm install

    - name: Build Frontend
      run: |
        cd frontend
        npm run build
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1


    - name: Deploy to S3
      run: |
        aws s3 sync frontend/build/ s3://${{ vars.S3_BUCKET_NAME }} --delete


    - name: Cloudfront Invalidation
      run: aws cloudfront create-invalidation --distribution-id ${{vars.CLOUDFRONT_DISTRIBUTION_ID}} --paths "/*"

  cypress_run:
    runs-on: ubuntu-latest
    needs: deploy
    if: ${{ success() }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: |
          cd frontend
          npm install

      - name: Run Cypress tests
        run: |
          cd e2e-tests
          npm install
          npx cypress run
        env:
          CYPRESS_BASE_URL: ${{ vars.FRONTEND_URL }}
          CYPRESS_BACKEDN_URL: ${{ vars.BACKEND_URL }}


  slack_notification:
    runs-on: ubuntu-latest
    needs: deploy
    if: always()
    
    steps:
      - name: Send Slack Notification
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack-message: âœ…Deployment completed successfully!
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}




   
